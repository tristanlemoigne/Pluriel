{"remainingRequest":"/Users/tlemoigne/Desktop/Pluriel/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tlemoigne/Desktop/Pluriel/client/src/views/tutoInteractif.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tlemoigne/Desktop/Pluriel/client/src/views/tutoInteractif.vue","mtime":1559148640799},{"path":"/Users/tlemoigne/Desktop/Pluriel/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tlemoigne/Desktop/Pluriel/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport TrackerVideo from \"@/components/TrackerVideo.vue\"\nimport { TweenMax, Power2, TimelineLite } from \"gsap/TweenMax\"\nimport { threeBus } from \"@/main\"\n\nexport default {\n    name: \"experience\",\n    components: { TrackerVideo },\n    props: {\n        roomState: Object\n    },\n    data: () => ({\n        uiDatas: {\n            isDebugMode: true\n        },\n        camIsActive: Boolean\n    }),\n    props: {\n        roomId: String,\n        isMobile: Boolean,\n        users: Array,\n        roomState: Object\n    },\n    methods: {},\n    mounted() {\n        //  Check if user has activated his camera\n        const checkCameraIsActivated = setInterval(() => {\n            navigator.getMedia =\n                navigator.getUserMedia ||\n                navigator.webkitGetUserMedia ||\n                navigator.mozGetUserMedia ||\n                navigator.msGetUserMedia\n\n            navigator.getMedia(\n                { video: true },\n                () => {\n                    if (\n                        this.$props.roomState.currentStep.activatesCam === true\n                    ) {\n                        // Start tracking\n                        console.log(\"we can start tracking\")\n                        this.$data.camIsActive = true\n                        clearInterval(checkCameraIsActivated)\n                    }\n                },\n                function() {\n                    console.error(\"webcam is not available\")\n                }\n            )\n        }, 500)\n\n        // bus.$emit(\"setRoomState\", {currentStep: {name:'NEXT'}})\n    }\n}\n",{"version":3,"sources":["tutoInteractif.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAwBA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"tutoInteractif.vue","sourceRoot":"src/views","sourcesContent":["<template>\n    <div class=\"tutoInteractif\">\n        <div class=\"camDetection\" :class=\"camIsActive === true ? 'camIsActive' : ''\">\n            <p class=\"textGlow\">Vous avez besoin de la webcam pour profiter de l’expérience</p>\n            <img class=\"svgGlow mobile\" src=\"/assets/img/webcam.svg\" alt>\n            <p class=\"textGlow\">Activez votre webcam pour continuer</p>\n        </div>\n\n        <div class=\"tutoExplanation\" :class=\"camIsActive === true ? 'camIsActive' : ''\">\n            <h2 class=\"textGlow\">Faites à présent usage de vos amulettes</h2>\n\n            <div class=\"explanationContainer\">\n                <TrackerVideo :hasStarted=\"camIsActive\" v-show=\"this.uiDatas.isDebugMode\"/>\n\n                <div>\n                    <p>Orientez l’écran de vos téléphones face à la webcam</p>\n                    <img class=\"svgGlow mobile\" src=\"/assets/img/tuto.svg\" alt>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport TrackerVideo from \"@/components/TrackerVideo.vue\"\nimport { TweenMax, Power2, TimelineLite } from \"gsap/TweenMax\"\nimport { threeBus } from \"@/main\"\n\nexport default {\n    name: \"experience\",\n    components: { TrackerVideo },\n    props: {\n        roomState: Object\n    },\n    data: () => ({\n        uiDatas: {\n            isDebugMode: true\n        },\n        camIsActive: Boolean\n    }),\n    props: {\n        roomId: String,\n        isMobile: Boolean,\n        users: Array,\n        roomState: Object\n    },\n    methods: {},\n    mounted() {\n        //  Check if user has activated his camera\n        const checkCameraIsActivated = setInterval(() => {\n            navigator.getMedia =\n                navigator.getUserMedia ||\n                navigator.webkitGetUserMedia ||\n                navigator.mozGetUserMedia ||\n                navigator.msGetUserMedia\n\n            navigator.getMedia(\n                { video: true },\n                () => {\n                    if (\n                        this.$props.roomState.currentStep.activatesCam === true\n                    ) {\n                        // Start tracking\n                        console.log(\"we can start tracking\")\n                        this.$data.camIsActive = true\n                        clearInterval(checkCameraIsActivated)\n                    }\n                },\n                function() {\n                    console.error(\"webcam is not available\")\n                }\n            )\n        }, 500)\n\n        // bus.$emit(\"setRoomState\", {currentStep: {name:'NEXT'}})\n    }\n}\n</script>\n\n<style scoped lang=\"scss\">\n@import \"@/config/styles.scss\";\n\n.tutoInteractif {\n    .camDetection {\n        transition: opacity 0.5s ease-in;\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n        text-align: center;\n        max-width: 300px;\n        margin: 0 auto;\n        position: relative;\n        top: 50%;\n        transform: translateY(-50%);\n\n        &.camIsActive {\n            opacity: 0;\n        }\n\n        img {\n            margin: 30px 0;\n        }\n        p:last-of-type {\n            font-weight: bold;\n        }\n    }\n\n    .tutoExplanation {\n        transition: opacity 0.5s 0.5s ease-in;\n        opacity: 0;\n        position: absolute;\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n\n        &.camIsActive {\n            opacity: 1;\n        }\n\n        p {\n            text-align: center;\n        }\n\n        .explanationContainer {\n            display: flex;\n            margin-top: 100px;\n            justify-content: center;\n            align-items: center;\n            justify-content: space-between;\n\n            video {\n                width: 800px;\n                height: 535px;\n                // filter: grayscale(100%);\n            }\n\n            p {\n                font-weight: bold;\n            }\n        }\n    }\n}\n</style>\n"]}]}