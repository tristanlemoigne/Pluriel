{"remainingRequest":"/Users/tlemoigne/Desktop/Pluriel/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tlemoigne/Desktop/Pluriel/client/src/components/TrackerVideo.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tlemoigne/Desktop/Pluriel/client/src/components/TrackerVideo.vue","mtime":1559148640788},{"path":"/Users/tlemoigne/Desktop/Pluriel/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tlemoigne/Desktop/Pluriel/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n\nimport Tracker from \"../threejs/sceneEntities/tracker/Tracker.js\"\n\nimport { threeBus } from \"../main\"\n\nexport default {\n    name: \"TrackerVideo\",\n    props: {\n        hasStarted: false\n    },\n    data: () => ({\n        tracker: null\n    }),\n    methods: {\n        /* ----------------------- TRACKER ----------------------- */\n        startTracker() {\n            this.tracker = Tracker(this.$refs.video)\n            this.tracker.onTrack(trackedDatas => {\n                threeBus.$emit(\"track\", trackedDatas)\n            })\n        }\n    },\n    watch: {\n        hasStarted() {\n            if (this.hasStarted === true) {\n                this.startTracker()\n            }\n        }\n    },\n    mounted() {\n        if (this.hasStarted === true) {\n            this.startTracker()\n        }\n    }\n}\n",{"version":3,"sources":["TrackerVideo.vue"],"names":[],"mappings":";;;;;AAKA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"TrackerVideo.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <video ref=\"video\" width=\"341\" height=\"256\" autoplay muted/>\n</template>\n\n<script>\nimport Tracker from \"../threejs/sceneEntities/tracker/Tracker.js\"\n\nimport { threeBus } from \"../main\"\n\nexport default {\n    name: \"TrackerVideo\",\n    props: {\n        hasStarted: false\n    },\n    data: () => ({\n        tracker: null\n    }),\n    methods: {\n        /* ----------------------- TRACKER ----------------------- */\n        startTracker() {\n            this.tracker = Tracker(this.$refs.video)\n            this.tracker.onTrack(trackedDatas => {\n                threeBus.$emit(\"track\", trackedDatas)\n            })\n        }\n    },\n    watch: {\n        hasStarted() {\n            if (this.hasStarted === true) {\n                this.startTracker()\n            }\n        }\n    },\n    mounted() {\n        if (this.hasStarted === true) {\n            this.startTracker()\n        }\n    }\n}\n</script>\n\n<style lang=\"scss\" scoped>\nvideo {\n    transform: scaleX(-1);\n}\n</style>\n"]}]}